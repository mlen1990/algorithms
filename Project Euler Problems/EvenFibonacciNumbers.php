<?php

/**
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 */


class EvenFibNumbers {

	/**
	 *
	 *	@param int $limit
	 *
	 *	@return int - Sum of all even fibonacci numbers where the final number does not exceed the $limit
	 *
	 */
	public static function sumEvenFibNumbers($limit) {

		if ($limit < 2) {
			return 0;
		}

		$f0 = 0;
		$f1 = 2;
		$sum = 0;
		while ($f1 < $limit) {
			$f2 = 4 * $f1 + $f0;

			$sum += $f1;
			$f0 = $f1;
			$f1 = $f2;
		}
		return $sum;
	}

	/**
	 *
	 *	@param none
	 *
	 *	@return none
	 *
	 */
	public static function testSums() {
		$test1 = EvenFibNumbers::sumEvenFibNumbers(2);
		echo ($test1 !== 0 ? "Error: Incorrect Sum: $test1 !== 0\n" : "Pass test 1\n");
		$test2 = EvenFibNumbers::sumEvenFibNumbers(9);
		echo ($test2 !== 10 ? "Error: Incorrect Sum: $test2 !== 0\n" : "Pass test 2\n");
		$test3 = EvenFibNumbers::sumEvenFibNumbers(35);
		echo ($test3 !== 44 ? "Error: Incorrect Sum: $test3 !== 0\n" : "Pass test 3\n");
		$test4 = EvenFibNumbers::sumEvenFibNumbers(-1);
		echo ($test4 !== 0 ? "Error: Incorrect Sum: $test4 !== 0\n" : "Pass test 4\n");
		$test5 = EvenFibNumbers::sumEvenFibNumbers(145);
		echo ($test5 !== 188 ? "Error: Incorrect Sum: $test5 !== 0\n" : "Pass test 5\n");
	}

}

EvenFibNumbers::testSums();